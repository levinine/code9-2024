Task: Implement the entire booking room logic, including creating a new Booking entity and saving bookings.

Requirements:
a: Entity: Define the Booking entity and BookingStatus enum as described below:

@Entity
@Table(name = "booking")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class Booking {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Integer id;

  @ManyToOne
  private Room room;

  private LocalDate checkInDate;

  private LocalDate checkOutDate;

  private String guestName;

  private String guestContactInfo;

  private Integer numberOfGuests;

  @Enumerated(EnumType.STRING)
  private BookingStatus status;

}

public enum BookingStatus {
    PENDING, CONFIRMED, CANCELED, COMPLETED
}

b: Create BookingDto
  Note: all attributes will be the same as in Booking except Room. In BookingDto we want only roomId
c: Converter: Create a converter class to convert DTOs to entities and vice versa.
d: Controller: Create controller class and add endpoint to handle create booking request.
e: Service: Create service class and implement the business logic to handle booking operations.
  Note: first check if the room exist before saving the booking.
f: Repository: save the booking to the database.
g: convert saved booking into dto class and return response
